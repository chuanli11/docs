openapi: 3.0.0
info:
  title: 'Departments REST API'
  description: >-
    Create, Update Delete, Get and List Run:AI Departments. <br> <br>
    
    A __Department__ is a second hierarchy of resource allocation above _Project_. A Department quota supersedes a Project quota in the sense that if the sum of Project quotas for a Department exceeds the Department quota -- the scheduler will use the Department quota rather than the Project quota. <br> <br> 
    The system comes with a default Department. A Project is associated with a Department ID.
  version: '1.0'
servers:
  - url: 'https://app.run.ai/v1/k8s'
  - url: 'https://staging.run.ai/v1/k8s'
tags:
  - name: Login
  - name: Department
#    description: description of department
paths:
  '/auth/login':
    post: 
      tags:
        - Login
      summary: Login
      security: []
      description: Log in with User/Password to receive a "Bearer" token, which is used to authenticate other API calls.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string      
      responses:
        '200' : 
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenant_id:
                    type: integer
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in: 
                    type: integer  
              example:
                tenant_id: 1
                access_token : "<bearer>"
                token_type : "bearer"
                expires_in: 86400
  '/departments':
    post:
      tags:
        - Department
      summary: Create a new Department.
      description: Retrieve a Department given a Department ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
      requestBody:
#        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'  
            example:
              name: "physics"
              deservedGpus : 6
              clusterUuid : "fa9b7d1c-2f08-42b8-b608-7b7c1fb40ea1"
  '/departments/{department_id}':
    get:
      tags:
        - Department
      summary: Returns a Department by Id.
      description: Retrieve a Department given a Department ID.
      parameters:
        - name: department_id
          in: path
          required: true
          description: Department ID.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentView'
    put:
      tags:
        - Department
      summary: Update a Department.
      description: Update a Department by Department ID. The Update API expects all editable Department fields. Fields that are omitted will be removed from the object.
      parameters:
        - name: department_id
          in: path
          required: true
          description: Department ID.
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 100
                name:
                  type: string
                  example: chemistry
                clusterUuid: 
                  type: string
                  format: uuid
                  example: fa9b7d1c-2f08-42b8-b608-7b7c1fb40ea1
                deservedGpus: 
                  type: integer 
                  example: 1         
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
    delete:
      tags:
        - Department
      summary: Delete a Department.
      description: Delete a Department by Department ID. 
      parameters:
        - name: department_id
          in: path
          required: true
          description: Department ID.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: Department with id 389 is deleted
  /clusters/{cluster_uuid}/departments:
    get:
      tags:
        - Department
      summary: List Departments in Cluster.
      description: Get list of all Departments for a given Cluster.
      parameters:
        - name: cluster_uuid
          in: path
          required: true
          description: Cluster Identifier.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A JSON array of Departments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentView'
components:
  schemas:
    DepartmentView:
      properties:
        id:
          type: integer
        name:
          type: string
        tenantId:
          type: integer
        clusterUuid:
          type: string
          format: uuid
        createdAt:
          type: string
        deservedGpus:
          type: integer
        maxAllowedGpus:
          type: integer
        projectsDeservedGpus:
          type: string
        projects:
          type: array
          items: 
            properties:
              id: {type: integer}
              name: {type: string}
              deserved_gpus: {type: integer}
      required:
      - id
      - name
      - clusterUuid
      - deservedGpus   
    Department:
      properties:
        id:
          type: integer
        name:
          type: string
        tenantId:
          type: integer
        clusterUuid:
          type: string
          format: uuid
        createdAt:
          type: string
        deservedGpus:
          type: integer
        maxAllowedGpus:
          type: integer
        projectsDeservedGpus:
          type: string
      required:
      - id
      - name
      - clusterUuid
      - deservedGpus

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
