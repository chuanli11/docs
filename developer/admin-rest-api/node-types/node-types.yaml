openapi: 3.0.0
info:
  title: 'Node Types REST API'
  description: >-
    Create, Update Delete, Get and List Run:AI Node Types. <br> <br>
    
    A __Node Type__ is a

  version: '1.0'
servers:
  - url: 'https://app.run.ai/v1/k8s'
  - url: 'https://staging.run.ai/v1/k8s'
tags:
  - name: Login
  - name: NodeType
#    description: description of department
paths:
  '/auth/login':
    post: 
      tags:
        - Login
      summary: Login
      security: []
      description: Log in with User/Password to receive a "Bearer" token, which is used to authenticate other API calls.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string      
      responses:
        '200' : 
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenant_id:
                    type: integer
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in: 
                    type: integer  
              example:
                tenant_id: 1
                access_token : "<bearer>"
                token_type : "bearer"
                expires_in: 86400
  '/nodetypes':
    post:
      tags:
        - NodeType
      summary: Create a new Node Type.
      description: Retrieve a Node Type given a Node Type ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
      requestBody:
#        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeType'  
            example:
              name: "v-100"
              clusterUuid : "fa9b7d1c-2f08-42b8-b608-7b7c1fb40ea1"
  '/nodetypes/{nodeType_id}':
    get:
      tags:
        - NodeType
      summary: Returns a Node Type by Id.
      description: Retrieve a Node Type given a Node Type ID.
      parameters:
        - name: nodeType_id
          in: path
          required: true
          description: Node Type ID.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
    put:
      tags:
        - NodeType
      summary: Update a Node Type.
      description: Update a Node Type by Node Type ID. The Update API expects all editable Node Type fields. Fields that are omitted will be removed from the object.
      parameters:
        - name: nodeType_id
          in: path
          required: true
          description: Node Type ID.
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 100
                name:
                  type: string
                  example: a-100
                clusterUuid: 
                  type: string
                  format: uuid
                  example: fa9b7d1c-2f08-42b8-b608-7b7c1fb40ea1       
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
    delete:
      tags:
        - NodeType
      summary: Delete a Node Type.
      description: Delete a Node Type by Node Type ID. 
      parameters:
        - name: nodeType_id
          in: path
          required: true
          description: Node Type ID.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: Node Type with id 389 is deleted
  /clusters/{cluster_uuid}/nodeTypes:
    get:
      tags:
        - NodeType
      summary: List Node Types in Cluster.
      description: Get list of all Node Types for a given Cluster.
      parameters:
        - name: cluster_uuid
          in: path
          required: true
          description: Cluster Identifier.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A JSON array of Node Types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeType'
components:
  schemas:    
    NodeType:
      properties:
        id:
          type: integer
        name:
          type: string
        tenantId:
          type: integer
        clusterUuid:
          type: string
          format: uuid
      required:
      - id
      - name
      - clusterUuid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
