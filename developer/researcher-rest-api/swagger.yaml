definitions:
  api.GitSync:
    properties:
      branch:
        type: string
      byRevision:
        type: boolean
      directory:
        type: string
      image:
        type: string
      password:
        type: string
      readOnly:
        type: boolean
      repository:
        type: string
      revision:
        type: string
      sync:
        type: boolean
      useCredentials:
        type: boolean
      username:
        type: string
    type: object
  api.Job:
    properties:
      arguments:
        items:
          type: string
        type: array
      backoffLimit:
        type: integer
      command:
        items:
          type: string
        type: array
      completions:
        type: integer
      cpu:
        type: number
      cpuLimit:
        type: number
      createHomeDir:
        type: boolean
      elastic:
        type: boolean
      environment:
        additionalProperties:
          type: string
        description: 'key -> val // todo check about object''s: EnvFrom []EnvFromSource'
        type: object
      gitSync:
        description: for now we are using only the first elment to be aligned with
          the ClI code
        items:
          $ref: '#/definitions/api.GitSync'
        type: array
      gpu:
        type: number
      gpuMemory:
        type: string
      hostIpc:
        type: boolean
      hostNetwork:
        type: boolean
      image:
        type: string
      imagePullPolicy:
        description: todo check policy names valid
        type: string
      jobNamePrefix:
        type: string
      jupyter:
        type: boolean
      jupyterPassword:
        type: string
      largeShm:
        type: boolean
      memory:
        type: string
      memoryLimit:
        type: string
      mpi:
        type: boolean
      name:
        type: string
      nodeType:
        type: string
      parallelism:
        description: todo check logic wr to completions?
        type: integer
      ports:
        items:
          $ref: '#/definitions/api.PortMap'
        type: array
      preemptible:
        type: boolean
      preventPrivilegeEscalation:
        type: boolean
      processes:
        type: integer
      project:
        type: string
      pvc:
        items:
          $ref: '#/definitions/api.Pvc'
        type: array
      runAsGid:
        type: integer
      runAsUid:
        type: integer
      runAsUser:
        type: boolean
      serviceType:
        type: integer
      stdin:
        type: boolean
      ttlAfterFinish:
        type: integer
      tty:
        type: boolean
      type:
        type: string
      volumes:
        items:
          $ref: '#/definitions/api.Volume'
        type: array
      workingDir:
        type: string
    type: object
  api.JobActionStatus:
    properties:
      error:
        $ref: '#/definitions/error.Error'
      name:
        type: string
      ok:
        type: boolean
    type: object
  api.JobTemplate:
    properties:
      name:
        type: string
      project:
        type: string
      settingsName:
        type: string
      values:
        $ref: '#/definitions/api.JobTemplateValues'
    type: object
  api.JobTemplateValues:
    properties:
      arguments:
        additionalProperties:
          type: string
        format: arguments
        type: object
      backoffLimit:
        type: integer
      command:
        type: string
      completions:
        type: integer
      cpu:
        type: number
      cpuLimit:
        type: number
      createHomeDir:
        type: boolean
      elastic:
        type: boolean
      environment:
        additionalProperties:
          type: string
        description: 'key -> val // todo check about object''s: EnvFrom []EnvFromSource'
        type: object
      gitSync:
        additionalProperties:
          $ref: '#/definitions/api.GitSync'
        format: gitSync
        type: object
      gpu:
        type: number
      gpuMemory:
        type: string
      hostIpc:
        type: boolean
      hostNetwork:
        type: boolean
      image:
        type: string
      imagePullPolicy:
        description: todo check policy names valid
        type: string
      jobNamePrefix:
        type: string
      jupyter:
        type: boolean
      largeShm:
        type: boolean
      memory:
        type: string
      memoryLimit:
        type: string
      mpi:
        type: boolean
      name:
        type: string
      nodeType:
        type: string
      parallelism:
        description: todo check logic wr to completions?
        type: integer
      ports:
        additionalProperties:
          $ref: '#/definitions/api.PortMapTV'
        format: portmap
        type: object
      preemptible:
        type: boolean
      preventPrivilegeEscalation:
        type: boolean
      processes:
        type: integer
      project:
        type: string
      pvc:
        additionalProperties:
          $ref: '#/definitions/api.Pvc'
        format: pvc
        type: object
      runAsGid:
        type: integer
      runAsUid:
        type: integer
      runAsUser:
        type: boolean
      serviceType:
        type: string
      stdin:
        type: boolean
      ttlAfterFinish:
        type: integer
      tty:
        type: boolean
      type:
        type: string
      volumes:
        additionalProperties:
          $ref: '#/definitions/api.Volume'
        format: volume
        type: object
      workingDir:
        type: string
    type: object
  api.JobView:
    properties:
      connectionUrl:
        type: string
      createdAt:
        type: integer
      currentAllocatedGPUs:
        type: number
      id:
        type: string
      images:
        type: string
      isJupyter:
        type: boolean
      isMpi:
        type: boolean
      name:
        type: string
      nodes:
        items:
          type: string
        type: array
      project:
        type: string
      status:
        type: string
      template:
        $ref: '#/definitions/api.JobTemplate'
      type:
        type: string
      user:
        type: string
    type: object
  api.PortMap:
    properties:
      autoGenerate:
        type: boolean
      container:
        type: integer
      external:
        type: integer
    type: object
  api.PortMapTV:
    properties:
      autoGenerate:
        type: boolean
      container:
        type: integer
      external:
        type: integer
    type: object
  api.Project:
    properties:
      createdAt:
        type: integer
      departmentName:
        type: string
      deservedGpus:
        type: number
      interactiveJobTimeLimitSecs:
        type: integer
      interactiveNodeAffinity:
        items:
          type: string
        type: array
      managedNamespace:
        type: string
      name:
        type: string
      trainNodeAffinity:
        items:
          type: string
        type: array
    type: object
  api.Pvc:
    properties:
      path:
        type: string
      readOnly:
        type: boolean
      size:
        type: string
      storageClass:
        type: string
    type: object
  api.SubmitJobParams:
    properties:
      job:
        $ref: '#/definitions/api.Job'
      template:
        $ref: '#/definitions/api.JobTemplate'
    type: object
  api.Volume:
    properties:
      nfsServer:
        type: string
      readOnly:
        type: boolean
      sourcePath:
        type: string
      targetPath:
        type: string
    type: object
  error.Error:
    properties:
      details:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  job.JobListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.JobView'
        type: array
    type: object
  job.submitRet:
    properties:
      name:
        type: string
    type: object
  project.ListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.Project'
        type: array
    type: object
info:
  contact: {}
  title: Researcher API
  version: "1.0"
paths:
  /api/v1/job:
    delete:
      parameters:
      - description: Job's name
        in: body
        name: jobName
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.JobActionStatus'
      security:
      - BearerAuth: []
      summary: Deletes a job
      tags:
      - job
    post:
      parameters:
      - description: Job's parameters
        in: body
        name: job
        required: true
        schema:
          $ref: '#/definitions/api.SubmitJobParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/job.submitRet'
      security:
      - BearerAuth: []
      summary: Submits a new job
      tags:
      - job
  /api/v1/job/{projectName}:
    get:
      parameters:
      - description: project name
        in: path
        name: projectName
        required: true
        type: string
      - description: 'One of: training, interactive, inference'
        in: query
        name: jobTypeFilter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/job.JobListResponse'
      security:
      - BearerAuth: []
      summary: Retrieves the job data for all the jobs in the project
      tags:
      - job
  /api/v1/job/{projectName}/{jobName}:
    get:
      parameters:
      - description: project name
        in: path
        name: projectName
        required: true
        type: string
      - description: job name
        in: path
        name: jobName
        required: true
        type: string
      - description: 'One of: training, interactive, inference'
        in: query
        name: jobTypeFilter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/job.JobListResponse'
      security:
      - BearerAuth: []
      summary: Retrieves a specific job data
      tags:
      - job
  /api/v1/projects:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.ListResponse'
      security:
      - BearerAuth: []
      summary: Retrieves projects' info
      tags:
      - project
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
